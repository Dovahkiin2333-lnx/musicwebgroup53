"""empty message

Revision ID: 5fd764d0adfa
Revises: 
Create Date: 2025-04-30 22:45:50.554049

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5fd764d0adfa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_captcha',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('captcha', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_index',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=20), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('search_content', sa.Text(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('search_index', schema=None) as batch_op:
        batch_op.create_index('idx_content', ['content_type', 'content_id'], unique=True)
        batch_op.create_index('idx_search', ['search_content'], unique=False, mysql_prefix='FULLTEXT')

    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('s_name', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=300), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('join_time', sa.DateTime(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.CheckConstraint("`role` IN ('student', 'user', 'admin', 'auditor', 'sadmin')", name='check_role_values'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('friendship_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('friend_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'friend_id', name='unique_friendship')
    )
    with op.batch_alter_table('friendship_model', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_friendship_model_timestamp'), ['timestamp'], unique=False)

    op.create_table('message_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('message_model', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_message_model_recipient_id'), ['recipient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_message_model_sender_id'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_message_model_timestamp'), ['timestamp'], unique=False)

    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('send_by', sa.Integer(), nullable=True),
    sa.Column('accept_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['accept_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['send_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('song',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('artist', sa.String(length=100), nullable=False),
    sa.Column('cover_filename', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('audio_filename', sa.String(length=500), nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('upload_time', sa.DateTime(), nullable=True),
    sa.CheckConstraint("category IN ('happy', 'relax', 'modern', 'vocal', '432Hz')", name='check_category_value'),
    sa.ForeignKeyConstraint(['uploader_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('avatar_filename', sa.String(length=255), nullable=True),
    sa.Column('avatar_upload_time', sa.DateTime(), nullable=True),
    sa.Column('avatar_approved', sa.Boolean(), nullable=True),
    sa.Column('description_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.String(length=500), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('liked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'song_id', name='_user_song_like_uc')
    )
    op.create_table('playlist_songs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('playlist_id', 'song_id', name='_playlist_song_uc')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlist_songs')
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('user_profiles')
    op.drop_table('song')
    op.drop_table('playlists')
    op.drop_table('notifications')
    with op.batch_alter_table('message_model', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_message_model_timestamp'))
        batch_op.drop_index(batch_op.f('ix_message_model_sender_id'))
        batch_op.drop_index(batch_op.f('ix_message_model_recipient_id'))

    op.drop_table('message_model')
    with op.batch_alter_table('friendship_model', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_friendship_model_timestamp'))

    op.drop_table('friendship_model')
    op.drop_table('user')
    with op.batch_alter_table('search_index', schema=None) as batch_op:
        batch_op.drop_index('idx_search', mysql_prefix='FULLTEXT')
        batch_op.drop_index('idx_content')

    op.drop_table('search_index')
    op.drop_table('email_captcha')
    # ### end Alembic commands ###
